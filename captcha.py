import random

# The character set supported by 't'
a = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"

t_old = [
    ["   *   ", "  * *  ", " *   * ", " ***** ", " *   * ", " *   * ", " *   * "],  # A
    ["*****  ", " *   * ", " *   * ", " ***** ", " *   * ", " *   * ", "*****  "],  # B
    [" ***** ", "*     *", "*      ", "*      ", "*      ", "*     *", " ***** "],  # C
    ["*****  ", "*    * ", "*     *", "*     *", "*     *", "*    * ", "*****  "],  # D
    ["*******", "*      ", "*      ", "****   ", "*      ", "*      ", "*******"],  # E
    ["*******", "*      ", "*      ", "****   ", "*      ", "*      ", "*      "],  # F
    [" ***** ", "*     *", "*      ", "*  ****", "*     *", "*     *", " ***** "],  # G
    ["*     *", "*     *", "*     *", "*******", "*     *", "*     *", "*     *"],  # H
    [" ***** ", "   *   ", "   *   ", "   *   ", "   *   ", "   *   ", " ***** "],  # I
    ["     **", "      *", "      *", "      *", "*     *", "*     *", " ***** "],  # J
    ["*    * ", "*   *  ", "*  *   ", "***    ", "*  *   ", "*   *  ", "*    * "],  # K
    ["*      ", "*      ", "*      ", "*      ", "*      ", "*      ", "*******"],  # L
    ["*     *", "**   **", "* * * *", "*  *  *", "*     *", "*     *", "*     *"],  # M
    ["*     *", "**    *", "* *   *", "*  *  *", "*   * *", "*    **", "*     *"],  # N
    [" ***** ", "*     *", "*     *", "*     *", "*     *", "*     *", " ***** "],  # O
    ["****** ", "*     *", "*     *", "****** ", "*      ", "*      ", "*      "],  # P
    [" ***** ", "*     *", "*     *", "*     *", "*   * *", "*    * ", " **** *"],  # Q
    ["****** ", "*     *", "*     *", "****** ", "*   *  ", "*    * ", "*     *"],  # R
    [" ***** ", "*     *", "*      ", " ***** ", "      *", "*     *", " ***** "],  # S
    ["*******", "   *   ", "   *   ", "   *   ", "   *   ", "   *   ", "   *   "],  # T
    ["*     *", "*     *", "*     *", "*     *", "*     *", "*     *", " ***** "],  # U
    ["*     *", "*     *", "*     *", " *   * ", "  * *  ", "   *   ", "   *   "],  # V
    ["*     *", "*     *", "*     *", "*  *  *", "*  *  *", " * * * ", "  * *  "],  # W
    ["*     *", " *   * ", "  * *  ", "   *   ", "  * *  ", " *   * ", "*     *"],  # X
    ["*     *", " *   * ", "  * *  ", "   *   ", "   *   ", "   *   ", "   *   "],  # Y
    ["*******", "     * ", "    *  ", "   *   ", "  *    ", " *     ", "*******"],  # Z
    ["  ***  ", " *   * ", "*     *", "*     *", "*     *", " *   * ", "  ***  "],  # 0
    ["   *   ", "  **   ", " * *   ", "   *   ", "   *   ", "   *   ", "*******"],  # 1
    [" ***** ", "*     *", "      *", "     * ", "   **  ", " **    ", "*******"],  # 2
    [" ***** ", "*     *", "      *", "    ** ", "      *", "*     *", " ***** "],  # 3
    ["    *  ", "   **  ", "  * *  ", " *  *  ", "*******", "    *  ", "    *  "],  # 4
    ["*******", "*      ", "****** ", "      *", "      *", "*     *", " ***** "],  # 5
    ["  **** ", " *     ", "*      ", "****** ", "*     *", "*     *", " ***** "],  # 6
    ["*******", "     * ", "    *  ", "   *   ", "  *    ", " *     ", "*      "],  # 7
    [" ***** ", "*     *", "*     *", " ***** ", "*     *", "*     *", " ***** "],  # 8
    [" ***** ", "*     *", "*     *", " ******", "      *", "     * ", " ****  "],  # 9
]

t = [
    ["   *   ", "  * *  ", "  * *  ", " *   * ", " ***** ", "*     *", "*     *"],
    ["****** ", "*     *", "*     *", "****** ", "*     *", "*     *", "****** "],
    [" ***** ", "*     *", "*      ", "*      ", "*      ", "*     *", " ***** "],
    ["****** ", "*     *", "*     *", "*     *", "*     *", "*     *", "****** "],
    ["*******", "*      ", "*      ", "****   ", "*      ", "*      ", "*******"],
    ["*******", "*      ", "*      ", "****   ", "*      ", "*      ", "*      "],
    [" ***** ", "*     *", "*      ", "*      ", "*   ***", "*     *", " ***** "],
    ["*     *", "*     *", "*     *", "*******", "*     *", "*     *", "*     *"],
    ["*******", "   *   ", "   *   ", "   *   ", "   *   ", "   *   ", "*******"],
    ["      *", "      *", "      *", "      *", "      *", "*     *", " ***** "],
    ["*     *", "*   ** ", "* **   ", "**     ", "* **   ", "*   ** ", "*     *"],
    ["*      ", "*      ", "*      ", "*      ", "*      ", "*      ", "*******"],
    ["*     *", "**   **", "* * * *", "*  *  *", "*     *", "*     *", "*     *"],
    ["*     *", "**    *", "* *   *", "*  *  *", "*   * *", "*    **", "*     *"],
    [" ***** ", "*     *", "*     *", "*     *", "*     *", "*     *", " ***** "],
    ["****** ", "*     *", "*     *", "****** ", "*      ", "*      ", "*      "],
    [" ***** ", "*     *", "*     *", "*     *", "*   * *", "*    * ", " **** *"],
    ["****** ", "*     *", "*     *", "****** ", "*   *  ", "*    * ", "*     *"],
    [" ***** ", "*     *", "*      ", " ***** ", "      *", "*     *", " ***** "],
    ["*******", "   *   ", "   *   ", "   *   ", "   *   ", "   *   ", "   *   "],
    ["*     *", "*     *", "*     *", "*     *", "*     *", "*     *", " ***** "],
    ["*     *", "*     *", " *   * ", " *   * ", "  * *  ", "  * *  ", "   *   "],
    ["*     *", "*     *", "*     *", "*  *  *", "* * * *", "**   **", "*     *"],
    ["*     *", " *   * ", "  * *  ", "   *   ", "  * *  ", " *   * ", "*     *"],
    ["*     *", " *   * ", "  * *  ", "   *   ", "   *   ", "   *   ", "   *   "],
    ["*******", "     * ", "    *  ", "   *   ", "  *    ", " *     ", "*******"],
    ["  ***  ", " *   * ", "*   * *", "*  *  *", "* *   *", " *   * ", "  ***  "],
    ["   *   ", "  **   ", " * *   ", "   *   ", "   *   ", "   *   ", "*******"],
    [" ***** ", "*     *", "      *", "     * ", "   **  ", " **    ", "*******"],
    [" ***** ", "*     *", "      *", "    ** ", "      *", "*     *", " ***** "],
    ["    *  ", "   **  ", "  * *  ", " *  *  ", "*******", "    *  ", "    *  "],
    ["*******", "*      ", "****** ", "      *", "      *", "*     *", " ***** "],
    ["  **** ", " *     ", "*      ", "****** ", "*     *", "*     *", " ***** "],
    ["*******", "     * ", "    *  ", "   *   ", "  *    ", " *     ", "*      "],
    [" ***** ", "*     *", "*     *", " ***** ", "*     *", "*     *", " ***** "],
    [" ***** ", "*     *", "*     *", " ******", "      *", "     * ", " ****  "]
]

def compare_blocks(block1, block2):
    return all(block1[i] == block2[i] for i in range(7))


def generate_captcha():
    return ''.join(random.choices(a, k=6))

def convert_string_to_ascii(string):
    ascii_art = ['' for _ in range(7)]
    for char in string:
        index = a.index(char)
        for i in range(7):
            ascii_art[i] += t[index][i] + ' '
    return '\n'.join(ascii_art)

def fetch_string_from_ascii(ascii_art):
    rows = ascii_art.strip().split('\n')
    for row in range(len(rows)):
      if len(rows[row]) < 48:
        if row == 0:
          rows[row] = ' '* (48 - len(rows[row])) + rows[row]
        else :
          rows[row] = rows[row] + ' ' * (48-len(rows[row]))
    rows = [[rows[j][i:i+7] for i in range(0, len(rows[0]), 8)] for j in range(7)]
    for row in rows:
      for i in range(len(row)):
        if len(row[i]) < 7:
          if i == 0:  # If it's the first element, add spaces at the start
            row[i] = ' ' * (7 - len(row[i])) + row[i]
          else:  # If it's not the first element, add spaces at the end
            row[i] = row[i] + ' ' * (7 - len(row[i]))
    result = ''
    for i in range(len(rows[0])):
        block = [rows[j][i] for j in range(7)]
        print(block)
        for idx, pattern in enumerate(t):
            if compare_blocks(block, pattern):
                result += a[idx]
                break
    return result

captcha = generate_captcha()
ascii_art = convert_string_to_ascii(captcha)

print(f"Generated CAPTCHA: {captcha}")
print("\nASCII Art:\n")
print(ascii_art)
print()

print(f"\nDecoded String: {fetch_string_from_ascii(ascii_art)}")
